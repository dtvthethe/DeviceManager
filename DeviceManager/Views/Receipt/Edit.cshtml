@model DeviceManager.Models.ViewModels.ReceiptViewModel

@{
    ViewBag.Title = "Chi tiết Nhập kho";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Nhập kho</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Chi tiết</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UsernameReceipt, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UsernameReceipt", Model.UserList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UsernameReceipt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDProvider, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDProvider", Model.ProviderList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDProvider, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @id = "ReceiptNote" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target=".bs-example-modal-lg">Thêm mới</button>
        <input type="button" value="Lưu lại" class="btn btn-danger btn-sm" onclick="saveAll()" />
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Device.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Device.Unit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Device.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Device.Note)
                </th>
                <th></th>
            </tr>

            @for (int i = 0; i < Model.Devices.Count; i++)
            {
                var item = Model.Devices.ToList()[i];
                <tr class="record">
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Unit.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        <a href="javascript:void(0)" data-toggle="modal" data-target=".bs-modal-edit" onclick="loadEdit(@i)">Chi tiết</a>
                        |
                        <a href="javascript:void(0)" onclick="deleteDevice(@i)">Xóa</a>
                    </td>
                </tr>
            }

        </table>
    </div>
}

    <div>
        @Html.ActionLink("Danh sách Nhập kho", "Index")
    </div>
<!--Model Create-->
<div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" id="modal-editor">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Thêm mới thiết bị</h4>
            </div>
            <div class="modal-body">
                @Html.Action("Create", "Device")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="addDevice()">Thêm mới</button>
            </div>
        </div>
    </div>
</div>
<!--End Model Create-->
<!--Model Edit-->
<div class="modal fade bs-modal-edit" tabindex="-1" role="dialog" aria-labelledby="modelEdit" id="modal-edit">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Modal title</h4>
            </div>
            <div class="modal-body" id="modal-edit-body">
                Loading...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="saveEdit()">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>
<!--End Model Edit-->

<div id="background-loading" style="display:none">

</div>

@section Scripts
{
    <script src="~/Scripts/Enums.js"></script>
    <script type="text/javascript">
        var DeviceList = [];

        initData();

        function initData() {
            DeviceList =  @Html.Raw(ViewBag.json);
        }

        function saveAll() {
            let data = {
                UsernameReceipt: $('#UsernameReceipt').val(),
                IDProvider: $('#IDProvider').val(),
                Note: $('#ReceiptNote').val(),
                DeviceEdits: DeviceList
            };

            $.ajax({
                type: "POST",
                url: '@Url.Action("Edit", "Receipt")',
                data: JSON.stringify(data),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    // location.reload();
                },
                error: function (msg) {
                    console.log(msg);
                }
            });

        }

        function deleteDevice(index) {
            if (index !== undefined && index >= 0) {
                // Add new:
                if (DeviceList[index].Action == ACTIONS.ADD) {
                    DeviceList.splice(index, 1);
                }
                else {
                    DeviceList[index].Action = ACTIONS.DELETE
                }

                loadData();
            }
        }


        function addDevice() {
            let data = {
                Name: $('#Name').val(),
                Quantity: $('#Quantity').val(),
                IDCategory: $('#IDCategory').val(),
                IDUnit: $('#IDUnit').val(),
                IDStatus: $('#IDStatus').val(),
                Price: $('#Price').val(),
                Info: $('#Info').val(),
                Note: $('#Note').val(),
                Action: ACTIONS.ADD
            };

            $.ajax({
                type: "POST",
                url: '@Url.Action("Create", "Device")',
                data: JSON.stringify(data),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    // Update DeviceList:
                    DeviceList.push(data);
                     loadData();
                    formatForm();
                    $('#modal-editor').modal('toggle');
                },
                error: function (msg) {
                    console.log(msg);
                }
            });

        }

        function loadData() {

            $('table.table > tbody > tr.record').each(function () {
                this.parentNode.removeChild(this);
            });

            for (let i = 0; i < DeviceList.length; i++) {
                let data = DeviceList[i];
                let record = '';

                if (data.Action != ACTIONS.DELETE) {
                    record = '<tr class="record"><td>' + data.Name + '</td><td>' + data.Unit.Name
                        + '</td><td>' + data.Quantity + '</td><td>' + data.Note + '</td><td>'
                        + '<a href="javascript:void(0)" data-toggle="modal" data-target=".bs-modal-edit" onclick="loadEdit('+ i +')">Chi tiết</a> | '
                        + '<a href="javascript:void(0)" onclick="deleteDevice(' + i + ')">Xóa</a>'
                        + '</td></tr >';
                }
                else {
                    record = '';
                }

                // Update UI:
                $('table.table > tbody').append(record);
            }
        }

        // Load editing form:
        function loadEdit(index) {
            if (index === undefined || index < 0) {
                return;
            }
            let data = DeviceList[index];
            data.Index = index;

            $.ajax({
                type: "POST",
                url: '@Url.Action("EditPartial", "Device")',
                data: JSON.stringify(data),
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $('#modal-edit-body').html(data);

                },
                error: function (msg) {
                    console.log(msg);
                }
            });
        }

        function saveEdit() {

            let data = DeviceList[$('#Index').val()];
            data.Index = $('#Index').val();
            data.Name = $('#DeviceName').val();
            data.Quantity = $('#DeviceQuantity').val();
            data.IDUnit = $('#DeviceIDUnit').val();
            data.IDStatus = $('#DeviceIDStatus').val();
            data.IDCategory = $('#DeviceIDCategory').val();
            data.Price = $('#DevicePrice').val();
            data.Info = $('#DeviceInfo').val();
            data.Note = $('#DeviceNote').val();
            data.Unit = {
                ID: data.IDUnit,
                Name: $('#DeviceIDUnit option:selected').text()
            };

            if (data.Action == ACTIONS.NONE) {
                data.Action = ACTIONS.EDIT;
            }
            DeviceList[data.Index] = data;
            loadData();
            $('#modal-edit').modal('toggle');

        }

        function formatForm() {
            $('#Name').val('');
            $('#Quantity').val(0);
            $("#IDCategory").val($("#IDCategory option:first").val());
            $("#IDUnit").val($("#IDUnit option:first").val());
            $("#IDStatus").val($("#IDStatus option:first").val());
            $('#Price').val('');
            $('#Info').val('');
            $('#Note').val('');
        }

    </script>
}